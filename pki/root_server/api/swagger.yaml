openapi: 3.0.0
info:
  title: rpki.in GO
  description: rpki in API docs
  contact:
    name: Paul GÃ¶hring
    email: paul.goehring@student.uni-tuebingen.de
  version: 1.0.0
servers:
- url: /
paths:
  /getChallenge:
    get:
      description: Get a Nonce Token
      parameters:
      - name: appID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
  /getNewChallenge:
    get:
      description: Get a Nonce Token
      parameters:
      - name: appID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
  /getCert:
    get:
      description: Get a Token
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jwt'
  /getNewCert:
    get:
      description: Get a Token
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jwt'
  /.well-known/certs:
    get:
      description: Show all valid Certificates. Optional Get Parameter kid to get
        JWT for specific key
      parameters:
      - name: kid
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jwk'
            text/plain:
              schema:
                type: string
components:
  schemas:
    jwt:
      type: object
      properties:
        kty:
          type: string
          description: key type
        iss:
          type: string
          description: issuer
        exp:
          type: string
          description: expiration date
        kid:
          type: string
          description: key id of server key which signs jwt
        jwk:
          $ref: '#/components/schemas/jwk'
      example:
        kty: kty
        kid: kid
        iss: iss
        exp: exp
        jwk:
          kty: kty
          e: e
          use: use
          kid: kid
          alg: alg
          "n": "n"
    jwk:
      required:
      - e
      - kty
      - "n"
      type: object
      properties:
        kty:
          type: string
        use:
          type: string
        alg:
          type: string
        "n":
          type: string
        e:
          type: string
        kid:
          type: string
      description: public key information of client
      example:
        kty: kty
        e: e
        use: use
        kid: kid
        alg: alg
        "n": "n"
